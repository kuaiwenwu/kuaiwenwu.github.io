<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>蒯文武的博客 on 蒯文武的博客</title>
    <link>https://kuaiwenwu.github.io/</link>
    <description>Recent content in 蒯文武的博客 on 蒯文武的博客</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>zh-Hans</language>
    <copyright>kuaiwenwu.github.io © 2019 ·转载须注明出处</copyright>
    <lastBuildDate>Wed, 10 Apr 2019 17:54:20 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>和我联系</title>
      <link>https://kuaiwenwu.github.io/contact/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kuaiwenwu.github.io/contact/contact/</guid>
      <description></description>
    </item>
    
    <item>
      <title>带你领略Go语言并发奥妙之处</title>
      <link>https://kuaiwenwu.github.io/featured/01_golesson/</link>
      <pubDate>Wed, 10 Apr 2019 17:54:20 +0800</pubDate>
      
      <guid>https://kuaiwenwu.github.io/featured/01_golesson/</guid>
      <description>

&lt;h5 id=&#34;我们在使用go语言进行开发时-一般会使用goroutine来处理并发任务-那么大家有没有考虑过goroutine的实现机制是什么样的-很多同学会把goroutine与线程等同起来-但是实际上并不是这样的-在这边文章中-我们将介绍以下内容&#34;&gt;我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;什么是goroutine？&lt;/li&gt;
&lt;li&gt;Goroutine与线程的区别&lt;/li&gt;
&lt;li&gt;Goroutine是如何调度的&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>带你领略Go语言并发奥妙之处</title>
      <link>https://kuaiwenwu.github.io/post/01_golesson/</link>
      <pubDate>Wed, 10 Apr 2019 17:54:20 +0800</pubDate>
      
      <guid>https://kuaiwenwu.github.io/post/01_golesson/</guid>
      <description>

&lt;h5 id=&#34;我们在使用go语言进行开发时-一般会使用goroutine来处理并发任务-那么大家有没有考虑过goroutine的实现机制是什么样的-很多同学会把goroutine与线程等同起来-但是实际上并不是这样的-在这边文章中-我们将介绍以下内容&#34;&gt;我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;什么是goroutine？&lt;/li&gt;
&lt;li&gt;Goroutine与线程的区别&lt;/li&gt;
&lt;li&gt;Goroutine是如何调度的&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>带你领略Go语言并发奥妙之处</title>
      <link>https://kuaiwenwu.github.io/projects/01_golesson/</link>
      <pubDate>Wed, 10 Apr 2019 17:54:20 +0800</pubDate>
      
      <guid>https://kuaiwenwu.github.io/projects/01_golesson/</guid>
      <description>

&lt;h5 id=&#34;我们在使用go语言进行开发时-一般会使用goroutine来处理并发任务-那么大家有没有考虑过goroutine的实现机制是什么样的-很多同学会把goroutine与线程等同起来-但是实际上并不是这样的-在这边文章中-我们将介绍以下内容&#34;&gt;我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;什么是goroutine？&lt;/li&gt;
&lt;li&gt;Goroutine与线程的区别&lt;/li&gt;
&lt;li&gt;Goroutine是如何调度的&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>带你领略Go语言并发奥妙之处</title>
      <link>https://kuaiwenwu.github.io/publication/01_golesson/</link>
      <pubDate>Wed, 10 Apr 2019 17:54:20 +0800</pubDate>
      
      <guid>https://kuaiwenwu.github.io/publication/01_golesson/</guid>
      <description>

&lt;h5 id=&#34;我们在使用go语言进行开发时-一般会使用goroutine来处理并发任务-那么大家有没有考虑过goroutine的实现机制是什么样的-很多同学会把goroutine与线程等同起来-但是实际上并不是这样的-在这边文章中-我们将介绍以下内容&#34;&gt;我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;什么是goroutine？&lt;/li&gt;
&lt;li&gt;Goroutine与线程的区别&lt;/li&gt;
&lt;li&gt;Goroutine是如何调度的&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>OpenKm文档系统安装部署</title>
      <link>https://kuaiwenwu.github.io/post/openkm/</link>
      <pubDate>Wed, 10 Apr 2019 11:40:26 +0800</pubDate>
      
      <guid>https://kuaiwenwu.github.io/post/openkm/</guid>
      <description>

&lt;p&gt;OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。&lt;/p&gt;

&lt;h1 id=&#34;一-准备工作&#34;&gt;一、准备工作&lt;/h1&gt;

&lt;h2 id=&#34;1-简介&#34;&gt;1. 简介&lt;/h2&gt;

&lt;p&gt;OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。&lt;/p&gt;

&lt;h2 id=&#34;2-安装jdk&#34;&gt;2. 安装Jdk&lt;/h2&gt;

&lt;p&gt;官网下载jdk1.8最新的版本jdk-8u151-linux-x64.tar.gz包体&lt;/p&gt;

&lt;p&gt;解压jdk-8u151-linux-x64.tar.gz到/usr/local/目录下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Tar xf /opt/soft/jdk-8u151-linux-x64.tar.gz –C /usr/local
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置jdk的环境变量，修改/etc/profile，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Vim /etc/profile :

export JAVA\_HOME=/usr/local/jdk1.8.0\_151

export JRE\_HOME=$JAVA\_HOME/jre

export CLASSPATH=.:$JAVA\_HOME/lib:$JRE\_HOME/lib

export PATH=$JAVA_HOME/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加载一下环境变量&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#source /etc/profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证环境变量是否可以&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Java  –version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;二、安装&lt;/p&gt;

&lt;h2 id=&#34;1-安装openkm&#34;&gt;1. 安装OpenKM&lt;/h2&gt;

&lt;p&gt;安装完Java后，只需要下载一个2.9MB的OKMInstaller.jar就可以部署在服务器自动配置和下载Tomcat和OpenKM以及相关的依赖和工具。&lt;br /&gt;
下载OKMInstaller.jar命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget [https://sourceforge.net/projects/openkm/files/common/OKMInstaller.jar]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-创建数据库用户openkm&#34;&gt;2. 创建数据库用户openkm&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;useradd openkm
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-安装mariadb数据库&#34;&gt;3. 安装MariaDB数据库&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;yum install mariadb-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置成开机启动并开启MariaDB:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl enable mariadb
systemctl start mariadb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OpenKM支持的数据库类型主要有以下：&lt;/p&gt;

&lt;p&gt;MariaDB (mariadb)&lt;/p&gt;

&lt;p&gt;MySQL (mysql)&lt;/p&gt;

&lt;p&gt;PostgreSQL (posgresql)&lt;/p&gt;

&lt;p&gt;SQL Server (sqlserver)&lt;/p&gt;

&lt;p&gt;Oracle (oracle)&lt;/p&gt;

&lt;p&gt;HSQLDB (hsqldb)&lt;/p&gt;

&lt;p&gt;H2 (h2)&lt;/p&gt;

&lt;p&gt;不建议使用默认的HSQLDB (hsqldb)，因为在实际使用过程中会出现一个OpenKM.lobs的文件太大甚至达到243GB。&lt;/p&gt;

&lt;h2 id=&#34;4-配置数据库&#34;&gt;4. 配置数据库&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# mysql

CREATE DATABASE okmdb DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_bin;

CREATE USER openkm@localhost IDENTIFIED BY &#39;openkm&#39;;

GRANT ALL ON okmdb.* TO openkm@localhost WITH GRANT OPTION;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;具体如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@VM\_112\_183_centos ~\]# mysql

Welcome to the MariaDB monitor.  Commands end with ; or \\g.

Your MariaDB connection id is 3

Server version: 5.5.56-MariaDB MariaDB Server

Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.

Type &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement.

MariaDB \[(none)\]&amp;gt; CREATE DATABASE okmdb DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_bin;

Query OK, 1 row affected (0.00 sec)

MariaDB \[(none)\]&amp;gt; CREATE USER openkm@localhost IDENTIFIED BY &#39;openkm&#39;;

Query OK, 0 rows affected (0.01 sec)

MariaDB \[(none)\]&amp;gt; GRANT ALL ON okmdb.* TO openkm@localhost WITH GRANT OPTION;

Query OK, 0 rows affected (0.00 sec)

MariaDB \[(none)\]&amp;gt; exit

Bye
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-安装过程&#34;&gt;5. 安装过程&lt;/h2&gt;

&lt;p&gt;这一部分是对OpenKM的数据库类型及账号密码配置，其中对数据库的账号密码必须与上面数据库配置的保持一致&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@VM\_112\_183_centos opt\]# java -jar OKMInstaller.jar

Running in Linux: 0.9.3-CE (build: 32e830e)

Linux distro: centos (CentOS Linux - 7)

Local host: localhost (127.0.0.1)

Java version: 1.8.0_151

Free disk size: 44.3 GB

RAM size: 992.7 MB

CPU cores: 1

Current directory: /opt

Database \[h2\]: mariadb

Database host \[localhost\]:

Database name \[okmdb\]:

Database user \[openkm\]:

Database password \[3SlGtCoumvYG\]: openkm

\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-

\- Database: mariadb

\- Database host: localhost

\- Database name: okmdb

\- Database user: openkm

\- Database password: openkm

\- Install version: 6.3.4

\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-

Start install process? \[y/N\]: y

\- Downloading Tomcat: 7.0.61

....*.... 10% ....*.... 20% ....*.... 30% ....*.... 40% ....*.... 50% ....*.... 60% ....*.... 70% ....*.... 80% ....*.... 90% ....*.... 100%

\- Unzipping archive... Done!

\- Fix permissions... Done!

\- Downloading OpenKM: 6.3.4

....*.... 10% ....*.... 20% ....*.... 30% ....*.... 40% ....*.... 50% ....*.... 60% ....*.... 70% ....*.... 80% ....*.... 90% ....*.... 100%

\- Unzipping archive... Done!

\- Check archive integrity... Done!

以下为软件依赖和OpenKM的工具安装过程

\- Copy OpenKM

\- Configure OpenKM

\- Configure service

\- Install dependencies

Loaded plugins: fastestmirror, langpacks

Loading mirror speeds from cached hostfile

Resolving Dependencies

--\&amp;gt; Running transaction check

---\&amp;gt; Package pciutils.x86_64 0:3.5.1-1.el7 will be updated

---\&amp;gt; Package pciutils.x86_64 0:3.5.1-2.el7 will be an update

--\&amp;gt; Processing Dependency: pciutils-libs = 3.5.1-2.el7 for package: pciutils-3.5.1-2.el7.x86_64

--\&amp;gt; Running transaction check

---\&amp;gt; Package pciutils-libs.x86_64 0:3.5.1-1.el7 will be updated

---\&amp;gt; Package pciutils-libs.x86_64 0:3.5.1-2.el7 will be an update

--\&amp;gt; Finished Dependency Resolution

Dependencies Resolved

\*\*\*\*\*\*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;#此处略去***&lt;/p&gt;

&lt;h1 id=&#34;三-配置&#34;&gt;三、配置&lt;/h1&gt;

&lt;h2 id=&#34;1-关闭防火墙&#34;&gt;1. 关闭防火墙&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vim /etc/selinux/config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将其中的SELINUX设置为disabled，开机默认关闭防火墙&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;SELINUX=disabled
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;并执行命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;setenforce 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;临时关闭防火墙&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;systemctl stop firewalld
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-启动或关闭openkm服务&#34;&gt;2. 启动或关闭OpenKM服务&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sh /opt/tomcat-8.5.24/bin/startup.sh
sh /opt/tomcat-8.5.24/bin/shutdown.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;四-汉化openkm&#34;&gt;四、汉化openkm&lt;/h1&gt;

&lt;p&gt;关于中文&lt;/p&gt;

&lt;p&gt;1、下载中文包：进入&lt;a href=&#34;http://wiki.openkm.com/index.php/Language_Packs，点击对应版本的Chinese&#34; target=&#34;_blank&#34;&gt;http://wiki.openkm.com/index.php/Language_Packs，点击对应版本的Chinese&lt;/a&gt; simple，点击下载最新版。&lt;/p&gt;

&lt;p&gt;2、帐号okmAdmin，密码：admin 登录系统后，点击最右上边的“administration”，或着点 击“Tools”-“show administration”，进入管理员页面。&lt;/p&gt;

&lt;p&gt;3、点击语言图标：紫色绿色的那个图标。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;static/img/openkm_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图1&lt;/p&gt;

&lt;p&gt;4、选择语言文件，然后点击“add new translation”&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;static/img/openkm_2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;5、点击图1中的第二个图标，进入设置页面，把默认语言设置成中文，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;static/img/openkm_3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;6、当前语言切换：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;static/img/openkm_4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;五-安装swftools字体&#34;&gt;五、安装swftools字体&lt;/h1&gt;

&lt;p&gt;1、从官网下载 swftools，这里下载的是 0.9.2 版本：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;　wget http://www.swftools.org/swftools-0.9.2.tar.gz  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、下载后得到 swftools-0.9.2.tar.gz 文件，我们来将其解压：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar vxzf swftools-0.9.2.tar.gz  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3、解压后得到 swftools-0.9.2 文件件，接下来我们进入到这个目录后做初始化配置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd swftools-0.9.2  
./configure --prefix=/usr/local/swftools  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4、编译并编译安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make  
make install  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5、为 swftool 配置环境变量：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /etc/profile  
export PATH=$PATH:/usr/swftools/bin/  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;6、下载 xpdf-chinese-simplified.tar.gz 简体中文字体解析文件；&lt;/p&gt;

&lt;p&gt;7、将 xpdf-chinese-simplified.tar.gz 文件上传至 /usr/local/share/xpdf 目录中，如果没有 /usr/local/share/xpdf 目录则创建：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /usr/local/share/xpdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8、将 xpdf-chinese-simplified.tar.gz 解压缩：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar -zxvf xpdf-chinese-simplified.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;9、将解压得到的 xpdf-chinese-simplified 文件夹更名为 chinese-simplified：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mv xpdf-chinese-simplified chinese-simplified
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;10、下载字体 Gbsn00lp.ttf 和字体 gkai00mp.ttf 并将其上传至 /usr/local/share/xpdf/chinese-simplified/CMap 目录：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/local/share/xpdf/chinese-simplified/CMap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;11、保存并退出&lt;br /&gt;
　　Esc &amp;ndash;&amp;gt; wq! &amp;ndash;&amp;gt; 回车&lt;/p&gt;

&lt;h1 id=&#34;六-访问openkm&#34;&gt;六、访问Openkm&lt;/h1&gt;

&lt;p&gt;默认访问OpenKM的url：&lt;a href=&#34;http://localhost:8080/OpenKM/&#34; target=&#34;_blank&#34;&gt;http://localhost:8080/OpenKM/&lt;/a&gt; 账号密码默认；&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OpenKm文档系统安装部署</title>
      <link>https://kuaiwenwu.github.io/publication/openkm/</link>
      <pubDate>Wed, 10 Apr 2019 11:40:26 +0800</pubDate>
      
      <guid>https://kuaiwenwu.github.io/publication/openkm/</guid>
      <description>

&lt;p&gt;OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。&lt;/p&gt;

&lt;h1 id=&#34;一-准备工作&#34;&gt;一、准备工作&lt;/h1&gt;

&lt;h2 id=&#34;1-简介&#34;&gt;1. 简介&lt;/h2&gt;

&lt;p&gt;OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。&lt;/p&gt;

&lt;h2 id=&#34;2-安装jdk&#34;&gt;2. 安装Jdk&lt;/h2&gt;

&lt;p&gt;官网下载jdk1.8最新的版本jdk-8u151-linux-x64.tar.gz包体&lt;/p&gt;

&lt;p&gt;解压jdk-8u151-linux-x64.tar.gz到/usr/local/目录下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Tar xf /opt/soft/jdk-8u151-linux-x64.tar.gz –C /usr/local
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置jdk的环境变量，修改/etc/profile，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Vim /etc/profile :

export JAVA\_HOME=/usr/local/jdk1.8.0\_151

export JRE\_HOME=$JAVA\_HOME/jre

export CLASSPATH=.:$JAVA\_HOME/lib:$JRE\_HOME/lib

export PATH=$JAVA_HOME/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加载一下环境变量&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#source /etc/profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证环境变量是否可以&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Java  –version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;二、安装&lt;/p&gt;

&lt;h2 id=&#34;1-安装openkm&#34;&gt;1. 安装OpenKM&lt;/h2&gt;

&lt;p&gt;安装完Java后，只需要下载一个2.9MB的OKMInstaller.jar就可以部署在服务器自动配置和下载Tomcat和OpenKM以及相关的依赖和工具。&lt;br /&gt;
下载OKMInstaller.jar命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget [https://sourceforge.net/projects/openkm/files/common/OKMInstaller.jar]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-创建数据库用户openkm&#34;&gt;2. 创建数据库用户openkm&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;useradd openkm
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-安装mariadb数据库&#34;&gt;3. 安装MariaDB数据库&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;yum install mariadb-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置成开机启动并开启MariaDB:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl enable mariadb
systemctl start mariadb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OpenKM支持的数据库类型主要有以下：&lt;/p&gt;

&lt;p&gt;MariaDB (mariadb)&lt;/p&gt;

&lt;p&gt;MySQL (mysql)&lt;/p&gt;

&lt;p&gt;PostgreSQL (posgresql)&lt;/p&gt;

&lt;p&gt;SQL Server (sqlserver)&lt;/p&gt;

&lt;p&gt;Oracle (oracle)&lt;/p&gt;

&lt;p&gt;HSQLDB (hsqldb)&lt;/p&gt;

&lt;p&gt;H2 (h2)&lt;/p&gt;

&lt;p&gt;不建议使用默认的HSQLDB (hsqldb)，因为在实际使用过程中会出现一个OpenKM.lobs的文件太大甚至达到243GB。&lt;/p&gt;

&lt;h2 id=&#34;4-配置数据库&#34;&gt;4. 配置数据库&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# mysql

CREATE DATABASE okmdb DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_bin;

CREATE USER openkm@localhost IDENTIFIED BY &#39;openkm&#39;;

GRANT ALL ON okmdb.* TO openkm@localhost WITH GRANT OPTION;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;具体如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@VM\_112\_183_centos ~\]# mysql

Welcome to the MariaDB monitor.  Commands end with ; or \\g.

Your MariaDB connection id is 3

Server version: 5.5.56-MariaDB MariaDB Server

Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.

Type &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement.

MariaDB \[(none)\]&amp;gt; CREATE DATABASE okmdb DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_bin;

Query OK, 1 row affected (0.00 sec)

MariaDB \[(none)\]&amp;gt; CREATE USER openkm@localhost IDENTIFIED BY &#39;openkm&#39;;

Query OK, 0 rows affected (0.01 sec)

MariaDB \[(none)\]&amp;gt; GRANT ALL ON okmdb.* TO openkm@localhost WITH GRANT OPTION;

Query OK, 0 rows affected (0.00 sec)

MariaDB \[(none)\]&amp;gt; exit

Bye
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-安装过程&#34;&gt;5. 安装过程&lt;/h2&gt;

&lt;p&gt;这一部分是对OpenKM的数据库类型及账号密码配置，其中对数据库的账号密码必须与上面数据库配置的保持一致&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@VM\_112\_183_centos opt\]# java -jar OKMInstaller.jar

Running in Linux: 0.9.3-CE (build: 32e830e)

Linux distro: centos (CentOS Linux - 7)

Local host: localhost (127.0.0.1)

Java version: 1.8.0_151

Free disk size: 44.3 GB

RAM size: 992.7 MB

CPU cores: 1

Current directory: /opt

Database \[h2\]: mariadb

Database host \[localhost\]:

Database name \[okmdb\]:

Database user \[openkm\]:

Database password \[3SlGtCoumvYG\]: openkm

\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-

\- Database: mariadb

\- Database host: localhost

\- Database name: okmdb

\- Database user: openkm

\- Database password: openkm

\- Install version: 6.3.4

\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-

Start install process? \[y/N\]: y

\- Downloading Tomcat: 7.0.61

....*.... 10% ....*.... 20% ....*.... 30% ....*.... 40% ....*.... 50% ....*.... 60% ....*.... 70% ....*.... 80% ....*.... 90% ....*.... 100%

\- Unzipping archive... Done!

\- Fix permissions... Done!

\- Downloading OpenKM: 6.3.4

....*.... 10% ....*.... 20% ....*.... 30% ....*.... 40% ....*.... 50% ....*.... 60% ....*.... 70% ....*.... 80% ....*.... 90% ....*.... 100%

\- Unzipping archive... Done!

\- Check archive integrity... Done!

以下为软件依赖和OpenKM的工具安装过程

\- Copy OpenKM

\- Configure OpenKM

\- Configure service

\- Install dependencies

Loaded plugins: fastestmirror, langpacks

Loading mirror speeds from cached hostfile

Resolving Dependencies

--\&amp;gt; Running transaction check

---\&amp;gt; Package pciutils.x86_64 0:3.5.1-1.el7 will be updated

---\&amp;gt; Package pciutils.x86_64 0:3.5.1-2.el7 will be an update

--\&amp;gt; Processing Dependency: pciutils-libs = 3.5.1-2.el7 for package: pciutils-3.5.1-2.el7.x86_64

--\&amp;gt; Running transaction check

---\&amp;gt; Package pciutils-libs.x86_64 0:3.5.1-1.el7 will be updated

---\&amp;gt; Package pciutils-libs.x86_64 0:3.5.1-2.el7 will be an update

--\&amp;gt; Finished Dependency Resolution

Dependencies Resolved

\*\*\*\*\*\*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;#此处略去***&lt;/p&gt;

&lt;h1 id=&#34;三-配置&#34;&gt;三、配置&lt;/h1&gt;

&lt;h2 id=&#34;1-关闭防火墙&#34;&gt;1. 关闭防火墙&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vim /etc/selinux/config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将其中的SELINUX设置为disabled，开机默认关闭防火墙&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;SELINUX=disabled
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;并执行命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;setenforce 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;临时关闭防火墙&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;systemctl stop firewalld
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-启动或关闭openkm服务&#34;&gt;2. 启动或关闭OpenKM服务&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sh /opt/tomcat-8.5.24/bin/startup.sh
sh /opt/tomcat-8.5.24/bin/shutdown.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;四-汉化openkm&#34;&gt;四、汉化openkm&lt;/h1&gt;

&lt;p&gt;关于中文&lt;/p&gt;

&lt;p&gt;1、下载中文包：进入&lt;a href=&#34;http://wiki.openkm.com/index.php/Language_Packs，点击对应版本的Chinese&#34; target=&#34;_blank&#34;&gt;http://wiki.openkm.com/index.php/Language_Packs，点击对应版本的Chinese&lt;/a&gt; simple，点击下载最新版。&lt;/p&gt;

&lt;p&gt;2、帐号okmAdmin，密码：admin 登录系统后，点击最右上边的“administration”，或着点 击“Tools”-“show administration”，进入管理员页面。&lt;/p&gt;

&lt;p&gt;3、点击语言图标：紫色绿色的那个图标。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;static/img/openkm_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图1&lt;/p&gt;

&lt;p&gt;4、选择语言文件，然后点击“add new translation”&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;static/img/openkm_2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;5、点击图1中的第二个图标，进入设置页面，把默认语言设置成中文，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;static/img/openkm_3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;6、当前语言切换：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;static/img/openkm_4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;五-安装swftools字体&#34;&gt;五、安装swftools字体&lt;/h1&gt;

&lt;p&gt;1、从官网下载 swftools，这里下载的是 0.9.2 版本：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;　wget http://www.swftools.org/swftools-0.9.2.tar.gz  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、下载后得到 swftools-0.9.2.tar.gz 文件，我们来将其解压：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar vxzf swftools-0.9.2.tar.gz  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3、解压后得到 swftools-0.9.2 文件件，接下来我们进入到这个目录后做初始化配置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd swftools-0.9.2  
./configure --prefix=/usr/local/swftools  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4、编译并编译安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make  
make install  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5、为 swftool 配置环境变量：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /etc/profile  
export PATH=$PATH:/usr/swftools/bin/  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;6、下载 xpdf-chinese-simplified.tar.gz 简体中文字体解析文件；&lt;/p&gt;

&lt;p&gt;7、将 xpdf-chinese-simplified.tar.gz 文件上传至 /usr/local/share/xpdf 目录中，如果没有 /usr/local/share/xpdf 目录则创建：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /usr/local/share/xpdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8、将 xpdf-chinese-simplified.tar.gz 解压缩：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar -zxvf xpdf-chinese-simplified.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;9、将解压得到的 xpdf-chinese-simplified 文件夹更名为 chinese-simplified：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mv xpdf-chinese-simplified chinese-simplified
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;10、下载字体 Gbsn00lp.ttf 和字体 gkai00mp.ttf 并将其上传至 /usr/local/share/xpdf/chinese-simplified/CMap 目录：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/local/share/xpdf/chinese-simplified/CMap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;11、保存并退出&lt;br /&gt;
　　Esc &amp;ndash;&amp;gt; wq! &amp;ndash;&amp;gt; 回车&lt;/p&gt;

&lt;h1 id=&#34;六-访问openkm&#34;&gt;六、访问Openkm&lt;/h1&gt;

&lt;p&gt;默认访问OpenKM的url：&lt;a href=&#34;http://localhost:8080/OpenKM/&#34; target=&#34;_blank&#34;&gt;http://localhost:8080/OpenKM/&lt;/a&gt; 账号密码默认；&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
