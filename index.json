[{"authors":["admin"],"categories":null,"content":"蒯文武，高级开发运维工程师，九年运维开发经验，service Mesh社区的拥护者，专注于开源项目的研发和实践，始终坚守运维一线。\n座右铭：尽管我们用判断力思考问题，但最终解决问题的还是意志，而不是才智。\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"zh","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://kuaiwenwu.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"蒯文武，高级开发运维工程师，九年运维开发经验，service Mesh社区的拥护者，专注于开源项目的研发和实践，始终坚守运维一线。\n座右铭：尽管我们用判断力思考问题，但最终解决问题的还是意志，而不是才智。","tags":null,"title":"蒯文武","type":"author"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":-62135596800,"objectID":"b4c7f25d5b7963758e82d0980c48943b","permalink":"https://kuaiwenwu.github.io/contact/contact/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact/contact/","section":"contact","summary":"","tags":null,"title":"和我联系","type":"contact"},{"authors":null,"categories":["原创文章"],"content":" rancher开启PodPreset实现容器时区同步 通过Pod Preset预设置时区环境变量\n\u0026gt;K8S激活Pod Preset Pod Preset目前还是alpha阶段，默认是没有激活的，对于手动以及二进制安装的k8s集群可以通过以下步骤激活:\n编辑/etc/kubernetes/manifests/kube-apiserver.yaml，\n• 在-runtime-config增加settings.k8s.io/v1alpha1=true\n• 在\u0026ndash;admission-control增加PodPreset`\n保存后kubelet会自动重启kube-apiserver组件。\n\u0026gt;Rancher 激活Pod Preset 对于通过Rancher构建的kubernetes集群，配置略有区别，则需要通过rancher的ui中进行修改实现：\n1.登录rancher的ui，进入需开启PodPreset的K8s集群，选择主机，在点击编辑集群按钮。 2.再次选择“编辑yml”选项后进行新增参数。 3.如图所示，在集群的yml中新增红色框标示部分。 编辑yml后，需要在kube-api下增加如下三行即可开启podpreset： extra_args: enable-admission-plugins: \u0026ldquo;PodPreset\u0026rdquo; runtime-config: \u0026ldquo;settings.k8s.io/v1alpha1=true\u0026rdquo;\n新增后，保存后集群将重新开始初始化，期间会有短暂的中断，很快自动恢复正常。\n详细代码如下：\naddon_job_timeout: 30 authentication: strategy: \u0026quot;x509|webhook\u0026quot; bastion_host: ssh_agent_auth: false ignore_docker_version: true ingress: provider: \u0026quot;nginx\u0026quot; kubernetes_version: \u0026quot;v1.13.5-rancher1-2\u0026quot; monitoring: provider: \u0026quot;metrics-server\u0026quot; network: options: flannel_backend_type: \u0026quot;vxlan\u0026quot; plugin: \u0026quot;flannel\u0026quot; restore: restore: false services: etcd: backup_config: enabled: true interval_hours: 12 retention: 6 creation: \u0026quot;12h\u0026quot; extra_args: election-timeout: \u0026quot;5000\u0026quot; heartbeat-interval: \u0026quot;500\u0026quot; retention: \u0026quot;72h\u0026quot; snapshot: false kube-api: always_pull_images: false # 在kube-api下增加如下三行即可开启podpreset extra_args: enable-admission-plugins: \u0026quot;PodPreset\u0026quot; runtime-config: \u0026quot;settings.k8s.io/v1alpha1=true\u0026quot; pod_security_policy: false service_node_port_range: \u0026quot;30000-32767\u0026quot; kubelet: fail_swap_on: false ssh_agent_auth: false # # # 自定义Rancher参数 # docker_root_dir: \u0026quot;/var/lib/docker\u0026quot; enable_cluster_alerting: false enable_cluster_monitoring: false enable_network_policy: false local_cluster_auth_endpoint: enabled: true name: \u0026quot;nyan-k8s-02\u0026quot;  PS: 对于敏感型的kubernetes平台的业务，建议在使用构建kubernetes后及时开启PodPreset，否则在线上直接开启，会造成服务的短暂性的中断，请务必慎用。 $$\n$$\n","date":1556588426,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1556588426,"objectID":"359289cee6558476d052256c3e406570","permalink":"https://kuaiwenwu.github.io/post/rancher_podpreset/","publishdate":"2019-04-30T09:40:26+08:00","relpermalink":"/post/rancher_podpreset/","section":"post","summary":"rancher开启PodPreset实现容器时区同步 通过Pod Preset预设置时区环境变量\n\u0026gt;K8S激活Pod Preset Pod Preset目前还是alpha阶段，默认是没有激活的，对于手动以及二进制安装的k8s集群可以通过以下步骤激活:\n编辑/etc/kubernetes/manifests/kube-apiserver.yaml，\n• 在-runtime-config增加settings.k8s.io/v1alpha1=true\n• 在\u0026ndash;admission-control增加PodPreset`\n保存后kubelet会自动重启kube-apiserver组件。\n\u0026gt;Rancher 激活Pod Preset 对于通过Rancher构建的kubernetes集群，配置略有区别，则需要通过rancher的ui中进行修改实现：\n1.登录rancher的ui，进入需开启PodPreset的K8s集群，选择主机，在点击编辑集群按钮。 2.再次选择“编辑yml”选项后进行新增参数。 3.如图所示，在集群的yml中新增红色框标示部分。 编辑yml后，需要在kube-api下增加如下三行即可开启podpreset： extra_args: enable-admission-plugins: \u0026ldquo;PodPreset\u0026rdquo; runtime-config: \u0026ldquo;settings.k8s.io/v1alpha1=true\u0026rdquo;\n新增后，保存后集群将重新开始初始化，期间会有短暂的中断，很快自动恢复正常。\n详细代码如下：\naddon_job_timeout: 30 authentication: strategy: \u0026quot;x509|webhook\u0026quot; bastion_host: ssh_agent_auth: false ignore_docker_version: true ingress: provider: \u0026quot;nginx\u0026quot; kubernetes_version: \u0026quot;v1.13.5-rancher1-2\u0026quot; monitoring: provider: \u0026quot;metrics-server\u0026quot; network: options: flannel_backend_type: \u0026quot;vxlan\u0026quot; plugin: \u0026quot;flannel\u0026quot; restore: restore: false services: etcd: backup_config: enabled: true interval_hours: 12 retention: 6 creation: \u0026quot;12h\u0026quot; extra_args: election-timeout: \u0026quot;5000\u0026quot; heartbeat-interval: \u0026quot;500\u0026quot; retention: \u0026quot;72h\u0026quot; snapshot: false kube-api: always_pull_images: false # 在kube-api下增加如下三行即可开启podpreset extra_args: enable-admission-plugins: \u0026quot;PodPreset\u0026quot; runtime-config: \u0026quot;settings.","tags":["Kubernetes","PodPreset","Rancher"],"title":"rancher开启PodPreset实现容器时区同步","type":"post"},{"authors":null,"categories":["学习笔记"],"content":" 我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：  什么是goroutine？ Goroutine与线程的区别 Goroutine是如何调度的  ","date":1554890060,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1554890060,"objectID":"b96876fdafc1ee10b1041caa7f89cc19","permalink":"https://kuaiwenwu.github.io/featured/01_golesson/","publishdate":"2019-04-10T17:54:20+08:00","relpermalink":"/featured/01_golesson/","section":"featured","summary":" 我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：  什么是goroutine？ Goroutine与线程的区别 Goroutine是如何调度的  ","tags":["Goroutine","Golang"],"title":"带你领略Go语言并发奥妙之处","type":"featured"},{"authors":null,"categories":["学习笔记"],"content":" 我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：  什么是goroutine？ Goroutine与线程的区别 Goroutine是如何调度的  ","date":1554890060,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1554890060,"objectID":"34a7c9b6cb3d6bb1de9a54f2bec9db30","permalink":"https://kuaiwenwu.github.io/post/01_golesson/","publishdate":"2019-04-10T17:54:20+08:00","relpermalink":"/post/01_golesson/","section":"post","summary":" 我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：  什么是goroutine？ Goroutine与线程的区别 Goroutine是如何调度的  ","tags":["Goroutine","Golang"],"title":"带你领略Go语言并发奥妙之处","type":"post"},{"authors":null,"categories":["学习笔记"],"content":" 我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：  什么是goroutine？ Goroutine与线程的区别 Goroutine是如何调度的  ","date":1554890060,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1554890060,"objectID":"c1dbb9766fa41b2c3a3ed690060133dc","permalink":"https://kuaiwenwu.github.io/projects/01_golesson/","publishdate":"2019-04-10T17:54:20+08:00","relpermalink":"/projects/01_golesson/","section":"projects","summary":" 我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：  什么是goroutine？ Goroutine与线程的区别 Goroutine是如何调度的  ","tags":["Goroutine","Golang"],"title":"带你领略Go语言并发奥妙之处","type":"projects"},{"authors":null,"categories":["学习笔记"],"content":" 我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：  什么是goroutine？ Goroutine与线程的区别 Goroutine是如何调度的  ","date":1554890060,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1554890060,"objectID":"c3593ef32a3c6c56072488ddcb5a88de","permalink":"https://kuaiwenwu.github.io/publication/01_golesson/","publishdate":"2019-04-10T17:54:20+08:00","relpermalink":"/publication/01_golesson/","section":"publication","summary":" 我们在使用Go语言进行开发时，一般会使用goroutine来处理并发任务。那么大家有没有考虑过goroutine的实现机制是什么样的？很多同学会把goroutine与线程等同起来，但是实际上并不是这样的。在这边文章中，我们将介绍以下内容：  什么是goroutine？ Goroutine与线程的区别 Goroutine是如何调度的  ","tags":["Goroutine","Golang"],"title":"带你领略Go语言并发奥妙之处","type":"publication"},{"authors":null,"categories":["原创文章"],"content":" OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。\n一、准备工作 1. 简介 OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。\n2. 安装Jdk 官网下载jdk1.8最新的版本jdk-8u151-linux-x64.tar.gz包体\n解压jdk-8u151-linux-x64.tar.gz到/usr/local/目录下\nTar xf /opt/soft/jdk-8u151-linux-x64.tar.gz –C /usr/local  配置jdk的环境变量，修改/etc/profile，\nVim /etc/profile : export JAVA\\_HOME=/usr/local/jdk1.8.0\\_151 export JRE\\_HOME=$JAVA\\_HOME/jre export CLASSPATH=.:$JAVA\\_HOME/lib:$JRE\\_HOME/lib export PATH=$JAVA_HOME/bin:$PATH  加载一下环境变量\n#source /etc/profile  验证环境变量是否可以\n# Java –version  二、安装\n1. 安装OpenKM 安装完Java后，只需要下载一个2.9MB的OKMInstaller.jar就可以部署在服务器自动配置和下载Tomcat和OpenKM以及相关的依赖和工具。\n下载OKMInstaller.jar命令\nwget [https://sourceforge.net/projects/openkm/files/common/OKMInstaller.jar]  2. 创建数据库用户openkm useradd openkm  3. 安装MariaDB数据库 yum install mariadb-server  设置成开机启动并开启MariaDB:\nsystemctl enable mariadb systemctl start mariadb  OpenKM支持的数据库类型主要有以下：\nMariaDB (mariadb)\nMySQL (mysql)\nPostgreSQL (posgresql)\nSQL Server (sqlserver)\nOracle (oracle)\nHSQLDB (hsqldb)\nH2 (h2)\n不建议使用默认的HSQLDB (hsqldb)，因为在实际使用过程中会出现一个OpenKM.lobs的文件太大甚至达到243GB。\n4. 配置数据库 # mysql CREATE DATABASE okmdb DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_bin; CREATE USER openkm@localhost IDENTIFIED BY 'openkm'; GRANT ALL ON okmdb.* TO openkm@localhost WITH GRANT OPTION;  具体如下：\n[root@VM\\_112\\_183_centos ~\\]# mysql Welcome to the MariaDB monitor. Commands end with ; or \\\\g. Your MariaDB connection id is 3 Server version: 5.5.56-MariaDB MariaDB Server Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\\\\h' for help. Type '\\\\c' to clear the current input statement. MariaDB \\[(none)\\]\u0026gt; CREATE DATABASE okmdb DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_bin; Query OK, 1 row affected (0.00 sec) MariaDB \\[(none)\\]\u0026gt; CREATE USER openkm@localhost IDENTIFIED BY 'openkm'; Query OK, 0 rows affected (0.01 sec) MariaDB \\[(none)\\]\u0026gt; GRANT ALL ON okmdb.* TO openkm@localhost WITH GRANT OPTION; Query OK, 0 rows affected (0.00 sec) MariaDB \\[(none)\\]\u0026gt; exit Bye  5. 安装过程 这一部分是对OpenKM的数据库类型及账号密码配置，其中对数据库的账号密码必须与上面数据库配置的保持一致\n[root@VM\\_112\\_183_centos opt\\]# java -jar OKMInstaller.jar Running in Linux: 0.9.3-CE (build: 32e830e) Linux distro: centos (CentOS Linux - 7) Local host: localhost (127.0.0.1) Java version: 1.8.0_151 Free disk size: 44.3 GB RAM size: 992.7 MB CPU cores: 1 Current directory: /opt Database \\[h2\\]: mariadb Database host \\[localhost\\]: Database name \\[okmdb\\]: Database user \\[openkm\\]: Database password \\[3SlGtCoumvYG\\]: openkm \\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\- \\- Database: mariadb \\- Database host: localhost \\- Database name: okmdb \\- Database user: openkm \\- Database password: openkm \\- Install version: 6.3.4 \\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\- Start install process? \\[y/N\\]: y \\- Downloading Tomcat: 7.0.61 ....*.... 10% ....*.... 20% ....*.... 30% ....*.... 40% ....*.... 50% ....*.... 60% ....*.... 70% ....*.... 80% ....*.... 90% ....*.... 100% \\- Unzipping archive... Done! \\- Fix permissions... Done! \\- Downloading OpenKM: 6.3.4 ....*.... 10% ....*.... 20% ....*.... 30% ....*.... 40% ....*.... 50% ....*.... 60% ....*.... 70% ....*.... 80% ....*.... 90% ....*.... 100% \\- Unzipping archive... Done! \\- Check archive integrity... Done! 以下为软件依赖和OpenKM的工具安装过程 \\- Copy OpenKM \\- Configure OpenKM \\- Configure service \\- Install dependencies Loaded plugins: fastestmirror, langpacks Loading mirror speeds from cached hostfile Resolving Dependencies --\\\u0026gt; Running transaction check ---\\\u0026gt; Package pciutils.x86_64 0:3.5.1-1.el7 will be updated ---\\\u0026gt; Package pciutils.x86_64 0:3.5.1-2.el7 will be an update --\\\u0026gt; Processing Dependency: pciutils-libs = 3.5.1-2.el7 for package: pciutils-3.5.1-2.el7.x86_64 --\\\u0026gt; Running transaction check ---\\\u0026gt; Package pciutils-libs.x86_64 0:3.5.1-1.el7 will be updated ---\\\u0026gt; Package pciutils-libs.x86_64 0:3.5.1-2.el7 will be an update --\\\u0026gt; Finished Dependency Resolution Dependencies Resolved \\*\\*\\*\\*\\*\\*  #此处略去***\n三、配置 1. 关闭防火墙 vim /etc/selinux/config  将其中的SELINUX设置为disabled，开机默认关闭防火墙\nSELINUX=disabled  并执行命令\nsetenforce 0  临时关闭防火墙\nsystemctl stop firewalld  2. 启动或关闭OpenKM服务 sh /opt/tomcat-8.5.24/bin/startup.sh sh /opt/tomcat-8.5.24/bin/shutdown.sh  四、汉化openkm 关于中文\n1、下载中文包：进入http://wiki.openkm.com/index.php/Language_Packs，点击对应版本的Chinese simple，点击下载最新版。\n2、帐号okmAdmin，密码：admin 登录系统后，点击最右上边的“administration”，或着点 击“Tools”-“show administration”，进入管理员页面。\n3、点击语言图标：紫色绿色的那个图标。\n图1\n4、选择语言文件，然后点击“add new translation”\n5、点击图1中的第二个图标，进入设置页面，把默认语言设置成中文，如下图所示：\n6、当前语言切换：\n五、安装swftools字体 1、从官网下载 swftools，这里下载的是 0.9.2 版本：\n　wget http://www.swftools.org/swftools-0.9.2.tar.gz  2、下载后得到 swftools-0.9.2.tar.gz 文件，我们来将其解压：\ntar vxzf swftools-0.9.2.tar.gz  3、解压后得到 swftools-0.9.2 文件件，接下来我们进入到这个目录后做初始化配置：\ncd swftools-0.9.2 ./configure --prefix=/usr/local/swftools  4、编译并编译安装：\nmake make install  5、为 swftool 配置环境变量：\nvim /etc/profile export PATH=$PATH:/usr/swftools/bin/  6、下载 xpdf-chinese-simplified.tar.gz 简体中文字体解析文件；\n7、将 xpdf-chinese-simplified.tar.gz 文件上传至 /usr/local/share/xpdf 目录中，如果没有 /usr/local/share/xpdf 目录则创建：\nmkdir -p /usr/local/share/xpdf  8、将 xpdf-chinese-simplified.tar.gz 解压缩：\ntar -zxvf xpdf-chinese-simplified.tar.gz  9、将解压得到的 xpdf-chinese-simplified 文件夹更名为 chinese-simplified：\nmv xpdf-chinese-simplified chinese-simplified  10、下载字体 Gbsn00lp.ttf 和字体 gkai00mp.ttf 并将其上传至 /usr/local/share/xpdf/chinese-simplified/CMap 目录：\ncd /usr/local/share/xpdf/chinese-simplified/CMap  11、保存并退出\nEsc \u0026ndash;\u0026gt; wq! \u0026ndash;\u0026gt; 回车\n六、访问Openkm 默认访问OpenKM的url：http://localhost:8080/OpenKM/ 账号密码默认；\n","date":1554867626,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1554867626,"objectID":"e18ed57d149607f6f99f6096ff039726","permalink":"https://kuaiwenwu.github.io/post/openkm/","publishdate":"2019-04-10T11:40:26+08:00","relpermalink":"/post/openkm/","section":"post","summary":"OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。\n一、准备工作 1. 简介 OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。\n2. 安装Jdk 官网下载jdk1.8最新的版本jdk-8u151-linux-x64.tar.gz包体\n解压jdk-8u151-linux-x64.tar.gz到/usr/local/目录下\nTar xf /opt/soft/jdk-8u151-linux-x64.tar.gz –C /usr/local  配置jdk的环境变量，修改/etc/profile，\nVim /etc/profile : export JAVA\\_HOME=/usr/local/jdk1.8.0\\_151 export JRE\\_HOME=$JAVA\\_HOME/jre export CLASSPATH=.:$JAVA\\_HOME/lib:$JRE\\_HOME/lib export PATH=$JAVA_HOME/bin:$PATH  加载一下环境变量\n#source /etc/profile  验证环境变量是否可以\n# Java –version  二、安装\n1. 安装OpenKM 安装完Java后，只需要下载一个2.9MB的OKMInstaller.jar就可以部署在服务器自动配置和下载Tomcat和OpenKM以及相关的依赖和工具。\n下载OKMInstaller.jar命令\nwget [https://sourceforge.net/projects/openkm/files/common/OKMInstaller.jar]  2. 创建数据库用户openkm useradd openkm  3. 安装MariaDB数据库 yum install mariadb-server  设置成开机启动并开启MariaDB:\nsystemctl enable mariadb systemctl start mariadb  OpenKM支持的数据库类型主要有以下：","tags":["OpenKm","Linux","文档系统"],"title":"OpenKm文档系统安装部署","type":"post"},{"authors":null,"categories":["原创文章"],"content":" OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。\n一、准备工作 1. 简介 OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。\n2. 安装Jdk 官网下载jdk1.8最新的版本jdk-8u151-linux-x64.tar.gz包体\n解压jdk-8u151-linux-x64.tar.gz到/usr/local/目录下\nTar xf /opt/soft/jdk-8u151-linux-x64.tar.gz –C /usr/local  配置jdk的环境变量，修改/etc/profile，\nVim /etc/profile : export JAVA\\_HOME=/usr/local/jdk1.8.0\\_151 export JRE\\_HOME=$JAVA\\_HOME/jre export CLASSPATH=.:$JAVA\\_HOME/lib:$JRE\\_HOME/lib export PATH=$JAVA_HOME/bin:$PATH  加载一下环境变量\n#source /etc/profile  验证环境变量是否可以\n# Java –version  二、安装\n1. 安装OpenKM 安装完Java后，只需要下载一个2.9MB的OKMInstaller.jar就可以部署在服务器自动配置和下载Tomcat和OpenKM以及相关的依赖和工具。\n下载OKMInstaller.jar命令\nwget [https://sourceforge.net/projects/openkm/files/common/OKMInstaller.jar]  2. 创建数据库用户openkm useradd openkm  3. 安装MariaDB数据库 yum install mariadb-server  设置成开机启动并开启MariaDB:\nsystemctl enable mariadb systemctl start mariadb  OpenKM支持的数据库类型主要有以下：\nMariaDB (mariadb)\nMySQL (mysql)\nPostgreSQL (posgresql)\nSQL Server (sqlserver)\nOracle (oracle)\nHSQLDB (hsqldb)\nH2 (h2)\n不建议使用默认的HSQLDB (hsqldb)，因为在实际使用过程中会出现一个OpenKM.lobs的文件太大甚至达到243GB。\n4. 配置数据库 # mysql CREATE DATABASE okmdb DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_bin; CREATE USER openkm@localhost IDENTIFIED BY 'openkm'; GRANT ALL ON okmdb.* TO openkm@localhost WITH GRANT OPTION;  具体如下：\n[root@VM\\_112\\_183_centos ~\\]# mysql Welcome to the MariaDB monitor. Commands end with ; or \\\\g. Your MariaDB connection id is 3 Server version: 5.5.56-MariaDB MariaDB Server Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\\\\h' for help. Type '\\\\c' to clear the current input statement. MariaDB \\[(none)\\]\u0026gt; CREATE DATABASE okmdb DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_bin; Query OK, 1 row affected (0.00 sec) MariaDB \\[(none)\\]\u0026gt; CREATE USER openkm@localhost IDENTIFIED BY 'openkm'; Query OK, 0 rows affected (0.01 sec) MariaDB \\[(none)\\]\u0026gt; GRANT ALL ON okmdb.* TO openkm@localhost WITH GRANT OPTION; Query OK, 0 rows affected (0.00 sec) MariaDB \\[(none)\\]\u0026gt; exit Bye  5. 安装过程 这一部分是对OpenKM的数据库类型及账号密码配置，其中对数据库的账号密码必须与上面数据库配置的保持一致\n[root@VM\\_112\\_183_centos opt\\]# java -jar OKMInstaller.jar Running in Linux: 0.9.3-CE (build: 32e830e) Linux distro: centos (CentOS Linux - 7) Local host: localhost (127.0.0.1) Java version: 1.8.0_151 Free disk size: 44.3 GB RAM size: 992.7 MB CPU cores: 1 Current directory: /opt Database \\[h2\\]: mariadb Database host \\[localhost\\]: Database name \\[okmdb\\]: Database user \\[openkm\\]: Database password \\[3SlGtCoumvYG\\]: openkm \\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\- \\- Database: mariadb \\- Database host: localhost \\- Database name: okmdb \\- Database user: openkm \\- Database password: openkm \\- Install version: 6.3.4 \\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\- Start install process? \\[y/N\\]: y \\- Downloading Tomcat: 7.0.61 ....*.... 10% ....*.... 20% ....*.... 30% ....*.... 40% ....*.... 50% ....*.... 60% ....*.... 70% ....*.... 80% ....*.... 90% ....*.... 100% \\- Unzipping archive... Done! \\- Fix permissions... Done! \\- Downloading OpenKM: 6.3.4 ....*.... 10% ....*.... 20% ....*.... 30% ....*.... 40% ....*.... 50% ....*.... 60% ....*.... 70% ....*.... 80% ....*.... 90% ....*.... 100% \\- Unzipping archive... Done! \\- Check archive integrity... Done! 以下为软件依赖和OpenKM的工具安装过程 \\- Copy OpenKM \\- Configure OpenKM \\- Configure service \\- Install dependencies Loaded plugins: fastestmirror, langpacks Loading mirror speeds from cached hostfile Resolving Dependencies --\\\u0026gt; Running transaction check ---\\\u0026gt; Package pciutils.x86_64 0:3.5.1-1.el7 will be updated ---\\\u0026gt; Package pciutils.x86_64 0:3.5.1-2.el7 will be an update --\\\u0026gt; Processing Dependency: pciutils-libs = 3.5.1-2.el7 for package: pciutils-3.5.1-2.el7.x86_64 --\\\u0026gt; Running transaction check ---\\\u0026gt; Package pciutils-libs.x86_64 0:3.5.1-1.el7 will be updated ---\\\u0026gt; Package pciutils-libs.x86_64 0:3.5.1-2.el7 will be an update --\\\u0026gt; Finished Dependency Resolution Dependencies Resolved \\*\\*\\*\\*\\*\\*  #此处略去***\n三、配置 1. 关闭防火墙 vim /etc/selinux/config  将其中的SELINUX设置为disabled，开机默认关闭防火墙\nSELINUX=disabled  并执行命令\nsetenforce 0  临时关闭防火墙\nsystemctl stop firewalld  2. 启动或关闭OpenKM服务 sh /opt/tomcat-8.5.24/bin/startup.sh sh /opt/tomcat-8.5.24/bin/shutdown.sh  四、汉化openkm 关于中文\n1、下载中文包：进入http://wiki.openkm.com/index.php/Language_Packs，点击对应版本的Chinese simple，点击下载最新版。\n2、帐号okmAdmin，密码：admin 登录系统后，点击最右上边的“administration”，或着点 击“Tools”-“show administration”，进入管理员页面。\n3、点击语言图标：紫色绿色的那个图标。\n图1\n4、选择语言文件，然后点击“add new translation”\n5、点击图1中的第二个图标，进入设置页面，把默认语言设置成中文，如下图所示：\n6、当前语言切换：\n五、安装swftools字体 1、从官网下载 swftools，这里下载的是 0.9.2 版本：\n　wget http://www.swftools.org/swftools-0.9.2.tar.gz  2、下载后得到 swftools-0.9.2.tar.gz 文件，我们来将其解压：\ntar vxzf swftools-0.9.2.tar.gz  3、解压后得到 swftools-0.9.2 文件件，接下来我们进入到这个目录后做初始化配置：\ncd swftools-0.9.2 ./configure --prefix=/usr/local/swftools  4、编译并编译安装：\nmake make install  5、为 swftool 配置环境变量：\nvim /etc/profile export PATH=$PATH:/usr/swftools/bin/  6、下载 xpdf-chinese-simplified.tar.gz 简体中文字体解析文件；\n7、将 xpdf-chinese-simplified.tar.gz 文件上传至 /usr/local/share/xpdf 目录中，如果没有 /usr/local/share/xpdf 目录则创建：\nmkdir -p /usr/local/share/xpdf  8、将 xpdf-chinese-simplified.tar.gz 解压缩：\ntar -zxvf xpdf-chinese-simplified.tar.gz  9、将解压得到的 xpdf-chinese-simplified 文件夹更名为 chinese-simplified：\nmv xpdf-chinese-simplified chinese-simplified  10、下载字体 Gbsn00lp.ttf 和字体 gkai00mp.ttf 并将其上传至 /usr/local/share/xpdf/chinese-simplified/CMap 目录：\ncd /usr/local/share/xpdf/chinese-simplified/CMap  11、保存并退出\nEsc \u0026ndash;\u0026gt; wq! \u0026ndash;\u0026gt; 回车\n六、访问Openkm 默认访问OpenKM的url：http://localhost:8080/OpenKM/ 账号密码默认；\n","date":1554867626,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1554867626,"objectID":"a92ef06c0c7ecf3108cd880cf5325d3a","permalink":"https://kuaiwenwu.github.io/publication/openkm/","publishdate":"2019-04-10T11:40:26+08:00","relpermalink":"/publication/openkm/","section":"publication","summary":"OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。\n一、准备工作 1. 简介 OpenKM是一个开放源代码的电子文档管理系统，它的特点是可用于大型公司或是中小企业， 适应性比较强。 并且在知识管理方面的加工，提供了更加灵活和成本较低的替代应用。\n2. 安装Jdk 官网下载jdk1.8最新的版本jdk-8u151-linux-x64.tar.gz包体\n解压jdk-8u151-linux-x64.tar.gz到/usr/local/目录下\nTar xf /opt/soft/jdk-8u151-linux-x64.tar.gz –C /usr/local  配置jdk的环境变量，修改/etc/profile，\nVim /etc/profile : export JAVA\\_HOME=/usr/local/jdk1.8.0\\_151 export JRE\\_HOME=$JAVA\\_HOME/jre export CLASSPATH=.:$JAVA\\_HOME/lib:$JRE\\_HOME/lib export PATH=$JAVA_HOME/bin:$PATH  加载一下环境变量\n#source /etc/profile  验证环境变量是否可以\n# Java –version  二、安装\n1. 安装OpenKM 安装完Java后，只需要下载一个2.9MB的OKMInstaller.jar就可以部署在服务器自动配置和下载Tomcat和OpenKM以及相关的依赖和工具。\n下载OKMInstaller.jar命令\nwget [https://sourceforge.net/projects/openkm/files/common/OKMInstaller.jar]  2. 创建数据库用户openkm useradd openkm  3. 安装MariaDB数据库 yum install mariadb-server  设置成开机启动并开启MariaDB:\nsystemctl enable mariadb systemctl start mariadb  OpenKM支持的数据库类型主要有以下：","tags":["OpenKm","Linux","文档系统"],"title":"OpenKm文档系统安装部署","type":"publication"}]